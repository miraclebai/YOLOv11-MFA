
# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLO11 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# YOLOv11-SDC-improved

# Parameters
nc: 3  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 319 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 319 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 409 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 631 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 631 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2_DRB, [256, False, 0.25]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, C3k2_DRB, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, C3k2_DRB, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, C3k2_DRB, [1024, True]]
  - [-1, 1, SF_Learnable, [1024]] # 9 使用改进的SF模块，输出通道数为1024
  - [-1, 1, ViTBlock, [1024]] # 10 添加ViT模块，确保输入输出通道数都是64
  - [-1, 2, C2PSA, [1024]] # 11 使用改进的C2PSA模块

head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4
  - [-1, 2, C3k2_DRB, [512, False]] # 14

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3
  - [-1, 2, C3k2_DRB, [512, False]] # 17 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 14], 1, Concat, [1]] # cat head P4
  - [-1, 2, C3k2_DRB, [512, False]] # 20 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 11], 1, Concat, [1]] # cat head P5
  - [-1, 2, C3k2_DRB, [1024, True]] # 23 (P5/32-large)

  # 添加MSCAF模块，融合浅层特征(model.0)和深层特征(model.10)
  - [[0, 11], 1, MSCAF, [512]] # 24，调整通道数匹配
  - [[0, 17], 1, MSCAF2, [512]] # 25，调整通道数匹配
  # 使用改进的CGAFusion模块
  - [[4, 17], 1, CGAFusion, []] # 26 (P3/8-small)
  - [[6, 20], 1, CGAFusion, []] # 27 (P4/16-medium)
  - [[11, 23], 1, CGAFusion,[]] # 28 (P5/32-large)，调整通道数匹配
  - [24, 1, Conv, [512, 3, 1]] #29
  - [25, 1, Conv, [512, 3, 1]] #30
  - [[26, 27, 28, 29, 30], 1, Detect, [nc]] # Detect(P3, P4, P5)
